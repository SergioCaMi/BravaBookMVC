Validaciones de form con Bootstrap:

Clases y Atributos de Validación
Clase needs-validation:

Esta clase se añade al elemento <form> para indicar que el formulario utilizará el estilo de validación de Bootstrap. Sin embargo, Bootstrap no realiza la validación por sí mismo; se basa en la validación HTML5.
Atributo novalidate:

Este atributo se añade al elemento <form> para desactivar la validación del navegador. Esto permite que la validación se maneje manualmente mediante JavaScript.


        <form id="apartmentForm" class="needs-validation" method="post" action="/admin/apartment/new" novalidate>

Clase was-validated:

Esta clase se añade al formulario para mostrar los estilos de validación después de que se haya intentado enviar el formulario. Esto se hace generalmente en el manejador de eventos submit del formulario.

Validación de Campos
Atributo required:

Este atributo se añade a los elementos <input>, <select>, y <textarea> para indicar que el campo es obligatorio. Si un campo con este atributo está vacío, el navegador mostrará un mensaje de error.
Clases de Validación:

              <input type="text" name="title" id="title" class="form-control" required />

Bootstrap proporciona clases como is-valid e is-invalid para aplicar estilos a los campos que han sido validados correctamente o incorrectamente, respectivamente.

en JS:

// Validación nativa del formulario
  if (!form.checkValidity()) {
    isValid = false;
  }

checkValidity():

Este método verifica si todos los campos del formulario cumplen con sus restricciones de validación (como required, min, max, etc.).

 // Cancelar envío si no es válido
  if (!isValid) {
    e.preventDefault();
    e.stopPropagation();
  }

preventDefault() y stopPropagation():

Si el formulario no es válido, se previene el envío del formulario y se detiene la propagación del evento.


was-validated:

Esta clase se añade al formulario para mostrar los estilos de validación de Bootstrap, lo que permite visualizar qué campos no son válidos.