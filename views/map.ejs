<!-- Incluye el encabezado de la p치gina desde un archivo parcial, pasando el t칤tulo como variable -->
<%- include("partials/header", { title: title }) %>

<!-- Incluye mensajes parciales, como notificaciones o alertas -->
<%- include("partials/mensajes") %>

<!-- Enlaces a Leaflet CSS y JS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

<!-- Hero Section Simple -->
<div class="hero-section position-relative overflow-hidden">
  <div class="hero-background position-absolute top-0 start-0 w-100 h-100"></div>
  <div class="hero-particles position-absolute top-0 start-0 w-100 h-100"></div>
  
  <div class="container-fluid position-relative" style="z-index: 2;">
    <div class="row align-items-center py-4">
      <div class="col-12">
        
        <!-- T칤tulo -->
        <div class="text-center text-white">
          <h1 class="display-5 fw-bold mb-2">
            Mapa de Apartamentos
          </h1>
          <p class="lead mb-0 opacity-90">
            Explora la ubicaci칩n de nuestras propiedades
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Contenedor principal del mapa -->
<div class="map-container-wrapper">
  <div class="container-fluid px-4 py-4">
    <div class="map-container backdrop-blur rounded-4 shadow-lg border border-light border-opacity-25 overflow-hidden">
      
      <!-- Contenedor principal con sidebar y mapa -->
      <div class="container">
        
        <!-- Lista de apartamentos -->
        <div id="apartment-list">
          <h2>Lista de Apartamentos</h2>
          <!-- Genera la lista de apartamentos -->
          <% apartments.forEach(apartment => { %>
            <div class="apartment-item" data-id="<%= apartment._id %>">
              <strong><%= apartment.title %></strong>
              <small><%= apartment.location.municipality.nm %>, <%= apartment.location.province.nm %></small>
            </div>
          <% }) %>
        </div>
        
        <!-- Mapa donde se mostrar치n los apartamentos -->
        <div id="map"></div>
      </div>
    </div>
  </div>
</div>

<!-- Estilos CSS personalizados -->
<style>
/* Hero Section */
.hero-section {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 25vh;
  position: relative;
}

.hero-background {
  background: 
    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(120, 119, 198, 0.2) 0%, transparent 50%);
}

.hero-particles {
  background-image: 
    radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
    radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.2), transparent),
    radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.4), transparent);
  background-repeat: repeat;
  background-size: 100px 100px;
  animation: particleFloat 20s linear infinite;
}

@keyframes particleFloat {
  0% { transform: translateY(0px); }
  100% { transform: translateY(-100px); }
}

/* Bot칩n de volver atr치s */
.btn-back {
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 50px;
  padding: 0;
  transition: all 0.3s ease;
  overflow: hidden;
  position: relative;
}

.btn-back-content {
  padding: 12px 24px;
  color: white;
  font-weight: 500;
  display: flex;
  align-items: center;
  transition: all 0.3s ease;
}

.btn-back:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
}

/* Contenedor del mapa */
.map-container-wrapper {
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
  min-height: 75vh;
}

.map-container {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  min-height: 70vh;
}

.backdrop-blur {
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
}

/* Estilo para el contenedor principal */
.container {
  display: flex;
  height: 70vh;
  overflow: hidden;
}

/* Estilo para la lista de apartamentos */
#apartment-list {
  width: 350px;
  padding: 1.5rem;
  background: rgba(248, 249, 250, 0.9);
  backdrop-filter: blur(10px);
  box-shadow: 2px 0 15px rgba(0,0,0,0.1);
  overflow-y: auto;
  border-right: 1px solid rgba(0, 0, 0, 0.1);
  max-height: 100%;
}

/* Estilo para el t칤tulo de la lista de apartamentos */
#apartment-list h2 {
  font-size: 1.3rem;
  margin-bottom: 1.5rem;
  color: #212529;
  font-weight: 700;
  display: flex;
  align-items: center;
}

#apartment-list h2::before {
  content: "游끽";
  margin-right: 0.5rem;
  font-size: 1.2rem;
}

/* Estilo para cada elemento de la lista de apartamentos */
.apartment-item {
  padding: 1rem 1.25rem;
  margin-bottom: 0.75rem;
  border: 2px solid transparent;
  border-radius: 12px;
  background: white;
  transition: all 0.3s ease;
  cursor: pointer;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  position: relative;
  overflow: hidden;
}

.apartment-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(13, 110, 253, 0.05), rgba(102, 16, 242, 0.05));
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* Efecto hover para los elementos de la lista de apartamentos */
.apartment-item:hover {
  background-color: white;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  border-color: rgba(13, 110, 253, 0.2);
}

.apartment-item:hover::before {
  opacity: 1;
}

/* Estilo para el elemento seleccionado de la lista de apartamentos */
.apartment-item.selected {
  background: linear-gradient(135deg, #0d6efd, #6610f2);
  color: white;
  border-color: #0d6efd;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(13, 110, 253, 0.3);
}

.apartment-item.selected::before {
  opacity: 0;
}

/* Estilo para el texto en negrita dentro de los elementos de la lista */
.apartment-item strong {
  display: block;
  font-size: 1rem;
  margin-bottom: 0.5rem;
  font-weight: 600;
  position: relative;
  z-index: 1;
}

.apartment-item small {
  position: relative;
  z-index: 1;
  opacity: 0.8;
  font-size: 0.875rem;
}

.apartment-item.selected small {
  opacity: 0.9;
}

/* Estilo para el mapa */
#map {
  flex: 1;
  height: 100%;
  z-index: 1;
  border-radius: 0 12px 12px 0;
  overflow: hidden;
}

/* Popups personalizados */
.leaflet-popup-content-wrapper {
  background: white !important;
  border-radius: 12px !important;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15) !important;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
}

.leaflet-popup-content {
  margin: 1rem !important;
  font-size: 0.875rem !important;
  line-height: 1.5 !important;
}

.leaflet-popup-tip {
  background: white !important;
  box-shadow: 0 3px 14px rgba(0, 0, 0, 0.1) !important;
}

/* Scroll personalizado */
#apartment-list::-webkit-scrollbar {
  width: 6px;
}

#apartment-list::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
  border-radius: 3px;
}

#apartment-list::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
}

#apartment-list::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.3);
}

/* Estilos para dispositivos m칩viles */
@media (max-width: 768px) {
  .hero-section {
    min-height: 20vh;
  }
  
  .container {
    flex-direction: column;
    height: auto;
  }
  
  #apartment-list {
    width: 100%;
    max-height: 300px;
    border-right: none;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 12px 12px 0 0;
  }
  
  #map {
    height: 50vh;
    min-height: 400px;
    border-radius: 0 0 12px 12px;
  }
  
  .map-container {
    min-height: auto;
  }
}

@media (max-width: 576px) {
  #apartment-list {
    padding: 1rem;
    max-height: 250px;
  }
  
  .apartment-item {
    padding: 0.75rem 1rem;
    margin-bottom: 0.5rem;
  }
  
  #apartment-list h2 {
    font-size: 1.1rem;
    margin-bottom: 1rem;
  }
}

/* Animaciones de entrada */
.apartment-item {
  animation: slideInLeft 0.5s ease-out;
}

.apartment-item:nth-child(2) { animation-delay: 0.1s; }
.apartment-item:nth-child(3) { animation-delay: 0.2s; }
.apartment-item:nth-child(4) { animation-delay: 0.3s; }
.apartment-item:nth-child(5) { animation-delay: 0.4s; }

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Efectos adicionales */
.apartment-item:active {
  transform: translateY(0);
  transition: transform 0.1s ease;
}

/* Mejoras en los controles del mapa */
.leaflet-control-zoom {
  border: none !important;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1) !important;
}

.leaflet-control-zoom a {
  background: white !important;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  color: #333 !important;
  font-weight: bold !important;
  transition: all 0.2s ease !important;
}

.leaflet-control-zoom a:hover {
  background: #f8f9fa !important;
  transform: scale(1.05) !important;
}

/* Marcadores personalizados */
.leaflet-marker-icon {
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
}
</style>

<!-- Script para manejar la l칩gica del mapa y la lista de apartamentos -->
<script>
document.addEventListener('DOMContentLoaded', async () => {
  // Inicializa el mapa y lo centra en Espa침a
  const map = L.map('map').setView([40.4168, -3.7038], 6);
  
  // A침ade una capa de mapa de OpenStreetMap
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; OpenStreetMap contributors'
  }).addTo(map);
  
  // Convierte los datos de los apartamentos a JSON
  const apartments = <%- JSON.stringify(apartments) %>;
  
  // Obtiene todos los elementos de la lista de apartamentos
  const apartmentItems = document.querySelectorAll('.apartment-item');
  
  // Array para almacenar los marcadores del mapa
  const markers = [];
  
  // Funci칩n para geocodificar la direcci칩n de un apartamento
  async function geocodeApartment(apartment) {
    const address = `${apartment.location.municipality.nm}, ${apartment.location.province.nm}, Espa침a`;
    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;
    
    try {
      // Realiza una solicitud a Nominatim para obtener las coordenadas
      const response = await fetch(url);
      const data = await response.json();
      
      // Si se obtienen datos, devuelve las coordenadas
      if (data && data.length > 0) {
        return {
          lat: parseFloat(data[0].lat),
          lon: parseFloat(data[0].lon)
        };
      }
    } catch (err) {
      console.error(`Error geocoding: ${address}`, err);
    }
    return null;
  }
  
  // Funci칩n para colocar los marcadores en el mapa
  async function placeMarkers() {
    for (const apartment of apartments) {
      // Obtiene las coordenadas del apartamento
      const coords = await geocodeApartment(apartment);
      
      // Si se obtienen coordenadas, coloca un marcador en el mapa
      if (coords) {
        const marker = L.marker([coords.lat, coords.lon]).addTo(map);
        
        // A침ade un popup al marcador con informaci칩n del apartamento
        marker.bindPopup(`
          <div style="text-align: center;">
            <b>${apartment.title}</b><br>
            <small class="text-muted">${apartment.location.municipality.nm}, ${apartment.location.province.nm}</small><br>
            <a href="/apartments/${apartment._id}" class="btn btn-primary btn-sm mt-2" style="
              background: linear-gradient(135deg, #0d6efd, #6610f2);
              border: none;
              border-radius: 20px;
              padding: 0.5rem 1rem;
              text-decoration: none;
              color: white;
              font-weight: 500;
              display: inline-block;
              margin-top: 0.5rem;
              transition: all 0.3s ease;
            ">Ver detalles</a>
          </div>
        `);
        
        // Guarda el marcador en el array de marcadores
        markers.push({ id: apartment._id, marker });
      }
      
      // Espera un segundo para evitar bloqueos por Nominatim
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
  }
  
  // A침ade un evento de clic a cada elemento de la lista de apartamentos
  apartmentItems.forEach(item => {
    item.addEventListener('click', () => {
      const id = item.dataset.id;
      
      // Remueve la clase 'selected' de todos los elementos
      apartmentItems.forEach(i => i.classList.remove('selected'));
      
      // A침ade la clase 'selected' al elemento clickeado
      item.classList.add('selected');
      
      // Encuentra el marcador correspondiente al apartamento clickeado
      const markerObj = markers.find(m => m.id === id);
      
      // Si se encuentra el marcador, abre su popup y centra el mapa en 칠l
      if (markerObj) {
        markerObj.marker.openPopup();
        map.setView(markerObj.marker.getLatLng(), 14);
      }
    });
  });
  
  // Llama a la funci칩n para colocar los marcadores en el mapa
  await placeMarkers();
});
</script>

<!-- Incluye el pie de p치gina desde un archivo parcial -->
<%- include("partials/footer") %>
